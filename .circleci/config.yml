version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/mybatis

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: mybatis-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: mybatis-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/mybatis-demo-1.0-SNAPSHOT.jar
      - add_ssh_keys:
          fingerprints:
            - "c7:45:3f:35:b4:43:10:19:99:e5:ae:6f:b3:ea:09:6b"
      - deploy:
          name: Deploy Over SSH
          command: |
            ls -a
            scp target/mybatis-demo-1.0-SNAPSHOT.jar root@home.godfunc.fun:~/

workflows:
  version: 2
  default:
    jobs:
      - build
      - deploy:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master